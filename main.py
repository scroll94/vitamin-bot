import os
import random
import logging
import asyncio
from flask import Flask, request
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
import requests

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = os.getenv("BOT_TOKEN", "8260202137:AAHc9MvaZAVlFfQwgHUsYi6z6ps2_Ekx1NE")
RENDER_URL = os.getenv("RENDER_EXTERNAL_URL", "vitamin-bot-mwr4.onrender.com")
PORT = int(os.environ.get("PORT", 5000))

# === –õ–û–ì–ò ===
logging.basicConfig(level=logging.INFO)

# === –°–û–û–ë–©–ï–ù–ò–Ø ===
CUTE_MESSAGES = [
    "üíñ –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞, –Ω–µ –∑–∞–±—É–¥—å –ø—Ä–æ –≤–∏—Ç–∞–º–∏–Ω—ã!",
    "‚ú® –ó–≤—ë–∑–¥–æ—á–∫–∞, –ø–æ—Ä–∞ –ø—Ä–∏–Ω—è—Ç—å –≤–∏—Ç–∞–º–∏–Ω–∫–∏!",
    "üéÄ –ö–æ—Ç–∏–∫ –º–æ–π, –ø–æ—Ä–∞ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ! üíä",
    "üíï –õ—é–±–∏–º–∞—è, –Ω–µ –∑–∞–±—É–¥—å –≤—ã–ø–∏—Ç—å –≤–∏—Ç–∞–º–∏–Ω—ã! üå∏",
]

SUCCESS_MESSAGES = [
    "üéâ –£–º–Ω–∏—á–∫–∞! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üí™",
    "üíñ –°–∞–º–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–µ–≤–æ—á–∫–∞! ü•∞",
    "‚ú® –ú–æ–ª–æ–¥–µ—Ü! –ó–∞–±–æ—Ç–∏—à—å—Å—è –æ —Å–µ–±–µ! üå∏",
    "üéÄ –í–æ—Ç —ç—Ç–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞! üíï",
]

# === –ö–ù–û–ü–ö–ò ===
def main_keyboard():
    return ReplyKeyboardMarkup(
        [["üíä –ù–∞–ø–æ–º–Ω–∏—Ç—å —Å–µ–π—á–∞—Å", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]],
        resize_keyboard=True
    )

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üíñ –ü—Ä–∏–≤–µ—Ç, –º–æ—è –º–∏–ª–∞—è! –Ø —Ç–≤–æ–π –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞—Ç–µ–ª—å –æ –≤–∏—Ç–∞–º–∏–Ω–∞—Ö üéÄ",
        reply_markup=main_keyboard()
    )

async def remind(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg1 = random.choice(CUTE_MESSAGES)
    msg2 = random.choice(SUCCESS_MESSAGES)
    await update.message.reply_text(msg1)
    await asyncio.sleep(2)
    await update.message.reply_text(msg2)

async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞, –Ω–æ —Ç—ã —É–∂–µ –º–æ–ª–æ–¥–µ—Ü!")

# === Flask + Telegram ===
app = Flask(__name__)
application = Application.builder().token(TOKEN).build()

application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.Regex("üíä –ù–∞–ø–æ–º–Ω–∏—Ç—å —Å–µ–π—á–∞—Å"), remind))
application.add_handler(MessageHandler(filters.Regex("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), stats))

# === Webhook ===
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–ø–¥–µ–π—Ç–æ–≤ –æ—Ç Telegram"""
    update = Update.de_json(request.get_json(force=True), application.bot)

    async def process():
        if not application.running:
            await application.initialize()
        await application.process_update(update)

    asyncio.run(process())
    return "OK", 200


@app.route("/")
def index():
    return "ü§ñ Vitamin Bot is alive!"


if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    webhook_url = f"https://api.telegram.org/bot{TOKEN}/setWebhook?url=https://{RENDER_URL}/{TOKEN}"
    print("Setting webhook:", requests.get(webhook_url).text)

    app.run(host="0.0.0.0", port=PORT)
